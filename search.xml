<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker容器开启ssh</title>
      <link href="/archives/1102979201/"/>
      <url>/archives/1102979201/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>默认docker镜像是没有ssh的，需要我们去手动安装开启</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h4 id="安装openssl-openssh-server"><a href="#安装openssl-openssh-server" class="headerlink" title="安装openssl,openssh-server"></a>安装openssl,openssh-server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y update</span><br><span class="line">$ yum install passwd openssl openssh-server -y</span><br></pre></td></tr></table></figure><h4 id="启动sshd"><a href="#启动sshd" class="headerlink" title="启动sshd"></a>启动sshd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/sbin/sshd -D &amp;</span><br></pre></td></tr></table></figure><p>启动需要pid文件存在，可以创建/var/run/ssh<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/sbin/sshd</span><br></pre></td></tr></table></figure><p></p><p>执行上面命令会报错:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Could not load host key: /etc/ssh/ssh_host_rsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ed25519_key</span><br></pre></td></tr></table></figure><p></p><p>解决办法<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -q -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -N <span class="string">''</span></span><br><span class="line">$ ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N <span class="string">''</span></span><br><span class="line">$ ssh-keygen -t dsa -f /etc/ssh/ssh_host_ed25519_key -N <span class="string">''</span></span><br></pre></td></tr></table></figure><p></p><h4 id="修改-etc-ssh-sshd-config-配置信息"><a href="#修改-etc-ssh-sshd-config-配置信息" class="headerlink" title="修改 /etc/ssh/sshd_config 配置信息"></a>修改 /etc/ssh/sshd_config 配置信息</h4><p>去掉注释 <code>Port</code>，<code>ListenAddress</code>，<code>ListenAddress</code><br><code>UsePAM yes</code> 改为 <code>UsePAM no</code><br><code>sePrivilegeSeparation sandbox</code> 改为 <code>UsePrivilegeSeparation no</code></p><p>执行：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i <span class="string">"s/#UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"</span> /etc/ssh/sshd_config</span><br><span class="line">$ sed -i <span class="string">"s/UsePAM.*/UsePAM no/g"</span> /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p></p><p>修改完后，重新启动sshd<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/sbin/sshd -D &amp;</span><br></pre></td></tr></table></figure><p></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx负载均衡简单的实现</title>
      <link href="/archives/efc4f59b/"/>
      <url>/archives/efc4f59b/</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>VirtualBox创建三个虚拟主机如下：</p><blockquote><p>负载主机：192.168.137.101<br>WEB主机: 192.168.137.102<br>WEB主机: 192.168.137.103</p></blockquote><p>负载主机只需要安装nginx，WEB主机安装lnmp环境</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="负载主机配置nginx"><a href="#负载主机配置nginx" class="headerlink" title="负载主机配置nginx"></a>负载主机配置nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">user  www www;</span><br><span class="line"></span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line">error_log  /home/wwwlogs/nginx_error.log  crit;</span><br><span class="line"></span><br><span class="line">pid        /usr/local/nginx/logs/nginx.pid;</span><br><span class="line"></span><br><span class="line">#Specifies the value for maximum file descriptors that can be opened by this process.</span><br><span class="line">worker_rlimit_nofile 51200;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">   worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">   include     mime.types;</span><br><span class="line">   default_type application/octet-stream;</span><br><span class="line">   sendfile        on;</span><br><span class="line">   keepalive_timeout  65;</span><br><span class="line">   log_format  main  &apos;$remote_addr - $remote_user [$time_local]&quot;$request&quot; &apos;</span><br><span class="line">             &apos;$status $body_bytes_sent&quot;$http_referer&quot; &apos;</span><br><span class="line">             &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">   upstream server_pools</span><br><span class="line">   &#123;</span><br><span class="line">       #ip_hash;</span><br><span class="line">       server 192.168.137.102:81;</span><br><span class="line">       server 192.168.137.103:81;</span><br><span class="line">   &#125;</span><br><span class="line">   server &#123;</span><br><span class="line">       listen  80;</span><br><span class="line">       server_name 192.168.137.101;</span><br><span class="line">       location / &#123;</span><br><span class="line">           proxy_pass http://server_pools;</span><br><span class="line">           proxy_set_header Host $host;</span><br><span class="line">           proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">           proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="WEB主机配置"><a href="#WEB主机配置" class="headerlink" title="WEB主机配置"></a>WEB主机配置</h3><p>WEB主机配置环境参考: <a href="https://lnmp.org/install.html" target="_blank" rel="noopener">https://lnmp.org/install.html</a><br>创建对应虚拟主机，监听81端口，域名绑定WEB主机的IP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 81;</span><br><span class="line">    #listen [::]:80;</span><br><span class="line">    server_name 192.168.137.102 ;</span><br><span class="line">    index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">    root  /home/wwwroot/192.168.137.102;</span><br><span class="line"></span><br><span class="line">    include rewrite/none.conf;</span><br><span class="line">    #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">    # Deny access to PHP files in specific directory</span><br><span class="line">    #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><span class="line"></span><br><span class="line">    include enable-php.conf;</span><br><span class="line"></span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*\.(js|css)?$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /.well-known &#123;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /\.</span><br><span class="line">    &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log  /home/wwwlogs/192.168.137.102.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WEB主机根目录上传php测试文件，文件内容：<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"主机："</span>.$_SERVER[<span class="string">'SERVER_ADDR'</span>];</span><br></pre></td></tr></table></figure><p></p><p>访问：<code>http://192.168.137.101</code>，<br>刷新访问，会发现随机打印 <code>主机：192.168.137.102</code> 和 <code>主机：192.168.137.103</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决ssh连接很慢的问题</title>
      <link href="/archives/3052698707/"/>
      <url>/archives/3052698707/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>SSH长时间才能连上，会长时间卡在以下代码:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Connecting to 192.168.137.101:22...</span><br><span class="line">Connection established.</span><br><span class="line">To escape to <span class="built_in">local</span> shell, press <span class="string">'Ctrl+Alt+]'</span>.</span><br></pre></td></tr></table></figure><p></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote><p>文档解释: UseDNS Specifies whether sshd should look up the remote host name and check that the resolved host name for the remote IP address maps back to the very same IP address. The default is “yes”.</p></blockquote><p>UseDNS默认值为yes，这个选项打开的状态下，当客户端试图登录SSH服务器时，服务器端先根据客户端的IP地址进行DNS反向查询出客户端的主机名，然后根据查询出的客户端主机名进行DNS正向记录查询，验证与其原始IP地址是否一致，所以在登陆的时候会出现卡顿。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>设置SSH配置项UseDNS no</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 将#UseDNS yes改为</span></span><br><span class="line">UseDNS no</span><br></pre></td></tr></table></figure><p>然后重启sshd服务，问题解决。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br><span class="line"><span class="comment"># CentOS 7 命令: /bin/systemctl restart sshd.service</span></span><br></pre></td></tr></table></figure><p></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tp5.1简单使用swoole创建websocket服务端</title>
      <link href="/archives/5a303a8b/"/>
      <url>/archives/5a303a8b/</url>
      
        <content type="html"><![CDATA[<h2 id="Swoole安装"><a href="#Swoole安装" class="headerlink" title="Swoole安装"></a>Swoole安装</h2><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载</span></span><br><span class="line">$ wget https://github.com/swoole/swoole-src/archive/v4.1.2.zip</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">$ unzip v4.1.2.zip</span><br><span class="line"><span class="comment">#进入目录</span></span><br><span class="line">$ <span class="built_in">cd</span> swoole-src-4.1.2</span><br><span class="line">$ phpize</span><br><span class="line">$ ./configure <span class="comment">#注意，要开启ssl的话，需要加上 --enable-openssl</span></span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><h3 id="PECL"><a href="#PECL" class="headerlink" title="PECL"></a>PECL</h3><p>swoole项目已收录到PHP官方扩展库，除了手工下载编译外，还可以通过PHP官方提供的pecl命令，一键下载安装swoole<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pecl install swoole</span><br></pre></td></tr></table></figure><p></p><p>编译安装成功后，修改php.ini加入 <code>extension=swoole.so</code><br>安装后可用 <code>php -m</code> 或 <code>phpinfo()</code> 来查看是否安装成功<br><a id="more"></a></p><h2 id="tp5-1安装swoole-Composer包"><a href="#tp5-1安装swoole-Composer包" class="headerlink" title="tp5.1安装swoole Composer包"></a>tp5.1安装swoole Composer包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer require topthink/think-swoole --ignore-platform-reqs</span><br></pre></td></tr></table></figure><blockquote><p>加上 <code>--ignore-platform-reqs</code> 表示忽略依赖检测，因为在Win下是无法安装Swoole的，Linux下开发请忽略</p></blockquote><p>安装成功后在项目根目录的 <code>config</code> 目录下会多出配置文件 <code>swoole.php</code> 和 <code>swoole_server.php</code>，我们关心的是 <code>swoole_server.php</code> 这个文件</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>打开 <code>swoole_server.php</code><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | ThinkPHP [ WE CAN DO IT JUST THINK IT ]</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | Copyright (c) 2006-2018 http://thinkphp.cn All rights reserved.</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | Author: liu21st &lt;liu21st@gmail.com&gt;</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Env</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | Swoole设置 php think swoole命令行下有效</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// 扩展自身配置</span></span><br><span class="line">    <span class="string">'host'</span>         =&gt; <span class="string">'0.0.0.0'</span>, <span class="comment">// 监听地址</span></span><br><span class="line">    <span class="string">'port'</span>         =&gt; <span class="number">9501</span>, <span class="comment">// 监听端口</span></span><br><span class="line">    <span class="string">'type'</span>         =&gt; <span class="string">'socket'</span>, <span class="comment">// 服务类型 支持 socket http server</span></span><br><span class="line">    <span class="string">'mode'</span>         =&gt; <span class="string">''</span>,</span><br><span class="line">    <span class="string">'socket_type'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">    <span class="string">'swoole_class'</span> =&gt; <span class="string">'app\common\library\Swoole'</span>, <span class="comment">// 自定义服务类名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可以支持swoole的所有配置参数</span></span><br><span class="line">    <span class="string">'daemonize'</span>    =&gt; <span class="keyword">false</span>,</span><br><span class="line">    <span class="string">'pid_file'</span>     =&gt; Env::get(<span class="string">'runtime_path'</span>) . <span class="string">'swoole_server.pid'</span>,</span><br><span class="line">    <span class="string">'log_file'</span>     =&gt; Env::get(<span class="string">'runtime_path'</span>) . <span class="string">'swoole_server.log'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事件回调定义</span></span><br><span class="line">    <span class="string">'onOpen'</span>       =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($server, $request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"server: handshake success with fd&#123;$request-&gt;fd&#125;\n"</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'onMessage'</span>    =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($server, $frame)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"receive from &#123;$frame-&gt;fd&#125;:&#123;$frame-&gt;data&#125;,opcode:&#123;$frame-&gt;opcode&#125;,fin:&#123;$frame-&gt;finish&#125;\n"</span>;</span><br><span class="line">        $server-&gt;push($frame-&gt;fd, <span class="string">"this is server"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'onRequest'</span>    =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($request, $response)</span> </span>&#123;</span><br><span class="line">        $response-&gt;end(<span class="string">"&lt;h1&gt;Hello Swoole. #"</span> . rand(<span class="number">1000</span>, <span class="number">9999</span>) . <span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'onClose'</span>      =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($ser, $fd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"client &#123;$fd&#125; closed\n"</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p></p><h3 id="创建服务类"><a href="#创建服务类" class="headerlink" title="创建服务类"></a>创建服务类</h3><p>我们这里自定义了服务类 <code>app\common\library\Swoole</code> ，所以需要创建该服务类；</p><p>流程是：</p><ol><li>客户端创建链接到服务器端</li><li>连接成功后服务端创建15秒后定时器，检测15秒时当前连接是否认证，没有认证直接主动断开连接</li><li>认证成功后，客户端每5秒向服务端发送ping数据，客户端每5秒检测一次连接是否超过10秒无请求，如果没有则主动断开连接，如果有则检测当前认证是否还有效，身份过期或者认证失效也主动断开连接</li></ol><p>在 <code>application\common\library\</code> 下创建 <code>Swoole.php</code> 文件，内容如下:<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">library</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">swoole</span>\<span class="title">Server</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Swoole</span> <span class="keyword">extends</span> <span class="title">Server</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $host = <span class="string">'0.0.0.0'</span>;</span><br><span class="line">    <span class="keyword">protected</span> $port = <span class="number">9502</span>;</span><br><span class="line">    <span class="keyword">protected</span> $serverType = <span class="string">'socket'</span>;</span><br><span class="line">    <span class="keyword">protected</span> $sockType = SWOOLE_SOCK_TCP|SWOOLE_SSL; <span class="comment">//SWOOLE_SSL标识开启ssl(wss)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Swoole server</span></span><br><span class="line">    <span class="keyword">private</span> $server;</span><br><span class="line">    <span class="comment">//Swoole client_id</span></span><br><span class="line">    <span class="keyword">private</span> $fd;</span><br><span class="line">    <span class="comment">//uid</span></span><br><span class="line">    <span class="keyword">private</span> $uid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $option = [</span><br><span class="line">        <span class="string">'worker_num'</span>=&gt; <span class="number">4</span>,</span><br><span class="line">        <span class="string">'daemonize'</span>=&gt; <span class="keyword">true</span>, <span class="comment">//true为后台运行</span></span><br><span class="line">        <span class="string">'backlog'</span>=&gt; <span class="number">128</span>,</span><br><span class="line">        <span class="string">'heartbeat_check_interval'</span> =&gt; <span class="number">5</span>, <span class="comment">//心跳检测：每5s检测一次</span></span><br><span class="line">        <span class="string">'heartbeat_idle_time'</span> =&gt; <span class="number">10</span>, <span class="comment">//心跳检测：超过10s未请求的连接主动关闭</span></span><br><span class="line">        <span class="string">'ssl_cert_file'</span> =&gt; <span class="string">'/etc/letsencrypt/live/cuuu.co/fullchain.pem'</span>, <span class="comment">//ssl证书</span></span><br><span class="line">        <span class="string">'ssl_key_file'</span> =&gt; <span class="string">'/etc/letsencrypt/live/cuuu.co/privkey.pem'</span>, <span class="comment">//ssl证书key</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 此事件在Worker进程/Task进程启动时发生。这里创建的对象可以在进程生命周期内使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $server</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $worker_id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onWorkerStart</span><span class="params">($server, $worker_id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;server = $server;</span><br><span class="line">        <span class="comment">//初始化redis</span></span><br><span class="line">        <span class="comment">//初始化db</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当WebSocket客户端与服务器建立连接并完成握手后会回调此函数。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $server</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $request</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onOpen</span><span class="params">($server, $request)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 客户端收到来自于服务器端的数据时会回调此函数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $server</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $fd</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $from_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $data</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onReceive</span><span class="params">($server, $fd, $from_id, $data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"接收到来自reactor:&#123;$from_id&#125;的数据&#123;$data&#125; \n"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有新的连接进入时，在worker进程中回调</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $server</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $fd</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $reactorId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onConnect</span><span class="params">($server, $fd, $reactorId)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//连接成功时，记录当前连接的客户端ID</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;fd = $fd;</span><br><span class="line">        swoole_timer_after(<span class="number">15000</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span> <span class="params">($fd)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;uid))&#123;</span><br><span class="line">                <span class="comment">//15秒后如果还未认证，主动关闭该连接</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;server-&gt;close($fd);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收http请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">($request, $response)</span></span>&#123;</span><br><span class="line">        $response-&gt;end(<span class="string">"&lt;h1&gt;Hello Swoole. #"</span> . rand(<span class="number">1000</span>, <span class="number">9999</span>) . <span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当服务器收到来自客户端的数据帧时会回调此函数</span></span><br><span class="line"><span class="comment">     * data格式 = &#123;"type":"auth","text":"xxxxxxxxxxxxxxx"&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $server</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $frame</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onMessage</span><span class="params">($server, $frame)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        $data = json_decode($frame-&gt;data, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($data[<span class="string">'type'</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;send(<span class="string">'error'</span>, <span class="number">-1</span>, <span class="string">'参数错误!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> ($data[<span class="string">'type'</span>])&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'auth'</span>:</span><br><span class="line">                <span class="keyword">$this</span>-&gt;auth($data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'ping'</span>:</span><br><span class="line">                <span class="keyword">$this</span>-&gt;ping();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * TCP客户端连接关闭后，在worker进程中回调此函数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $ser</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $fd</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onClose</span><span class="params">($ser, $fd)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"client &#123;$fd&#125; closed\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bool $is_object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span><span class="params">($type, $code, $message, $data = [], $is_object = true)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($data) &amp;&amp; $is_object)&#123;</span><br><span class="line">            $data = (object)$data;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = json_encode([</span><br><span class="line">            <span class="string">'code'</span> =&gt; $code,</span><br><span class="line">            <span class="string">'msg'</span> =&gt; $message,</span><br><span class="line">            <span class="string">'type'</span> =&gt; $type,</span><br><span class="line">            <span class="string">'data'</span> =&gt; $data</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;server-&gt;push(<span class="keyword">$this</span>-&gt;fd, $msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户认证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 用户认证</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 认证后记录当前请求uid，注意swoole中是无法使用session的</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;uid = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;send(<span class="string">'auth'</span>, <span class="number">0</span>, <span class="string">'账号认证通过'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ping检测</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">ping</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;uid))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;send(<span class="string">'error'</span>, <span class="number">-1</span>, <span class="string">'请求未认证，请先认证'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;server-&gt;close(<span class="keyword">$this</span>-&gt;fd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 如果用户失效，则主动关闭连接</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        $is_exists = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (!$is_exists)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;send(<span class="string">'error'</span>, <span class="number">-1</span>, <span class="string">'登陆状态失效'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;server-&gt;close(<span class="keyword">$this</span>-&gt;fd);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="Html文件"><a href="#Html文件" class="headerlink" title="Html文件"></a>Html文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"type"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"text"</span>&gt;</span>text<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"text"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"send"</span> <span class="attr">disabled</span>&gt;</span>SEND<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"label"</span> <span class="attr">style</span>=<span class="string">"min-height: 900px; width: 600px"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    websocket = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">    token = <span class="string">''</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#send"</span>).attr(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//登录</span></span></span><br><span class="line"><span class="undefined">        login();</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">text</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> va = $(<span class="string">'#label'</span>).val();</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#label'</span>).val(va + <span class="string">"\r\n"</span> + text);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">wsConnect</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> wsServer = <span class="string">'ws://xxx.com:9502'</span>;</span></span><br><span class="line"><span class="javascript">        websocket = <span class="keyword">new</span> WebSocket(wsServer);</span></span><br><span class="line"><span class="javascript">        time = <span class="literal">null</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        websocket.onopen = <span class="function"><span class="keyword">function</span> (<span class="params">evt</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#send"</span>).attr(<span class="string">"disabled"</span>, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">            print(<span class="string">"Connected to WebSocket server."</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">//认证</span></span></span><br><span class="line"><span class="javascript">            send(<span class="string">'auth'</span>, token);</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="javascript">        websocket.onclose = <span class="function"><span class="keyword">function</span> (<span class="params">evt</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#send"</span>).attr(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (time != <span class="literal">null</span>)&#123;</span></span><br><span class="line"><span class="undefined">                clearTimeout(time);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            print(<span class="string">"Disconnected"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="javascript">        websocket.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">evt</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(evt.data);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">switch</span> (data.type) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">case</span> <span class="string">'auth'</span>:</span></span><br><span class="line"><span class="undefined">                    ping();</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">case</span> <span class="string">'error'</span>:</span></span><br><span class="line"><span class="undefined">                    print(data.msg)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            print(<span class="string">'Retrieved data from server: '</span> + data.msg);</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="javascript">        websocket.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">evt, e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#send"</span>).attr(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">            print(<span class="string">'Error occured: '</span> + evt.data);</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">ping</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        send(<span class="string">'ping'</span>, <span class="string">''</span>);</span></span><br><span class="line"><span class="javascript">        time = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">            ping()</span></span><br><span class="line"><span class="undefined">        &#125;, 5000);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#send'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> txt = $(<span class="string">'#text'</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> type = $(<span class="string">'#type'</span>).val();</span></span><br><span class="line"><span class="undefined">        send(type, txt)</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params">type = <span class="string">''</span>, str = <span class="string">''</span></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        print(<span class="string">'send:['</span>+type+<span class="string">']'</span> + str);</span></span><br><span class="line"><span class="javascript">        websocket.send(<span class="string">'&#123;"type":"'</span> +type+ <span class="string">'","text":"'</span> +str+ <span class="string">'"&#125;'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        print(<span class="string">'登录成功'</span>);</span></span><br><span class="line"><span class="javascript">        token = <span class="string">'sssssssssssssssssssssss'</span>;</span></span><br><span class="line"><span class="undefined">        wsConnect();</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h2><p>Html效果<br><img src="https://iuu.st/uploads/iuu/20180915/f357c0da2e5eaf475ca93d305842ce56.png" alt="lZ4.png"></p><p>websocket连接图<br><img src="https://iuu.st/uploads/iuu/20180915/b0e298044313ec414500a2edecd3a9a7.png" alt="za6.png"></p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> swoole </tag>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建自己的ngrok服务器实现内网穿透</title>
      <link href="/archives/e031ff1c/"/>
      <url>/archives/e031ff1c/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>本地开发调试时难免需要外网访问，比如支付，微信开发等等，以前用的是花生壳，但是免费版的又卡又不稳定，还好有个ngrok，但是官方的也是很卡，刚好这东西是开源的，你可以在自己的vps上搭建！</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Vps环境：CentOs 6.8 64位（我是在这个环境下搭建的）</p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>安装前请先把您的域名解析到服务器，例如：<br>ngrok.simayubo.cc =》 47.0.0.0<br>*.ngrok.simayubo.cc =》 47.0.0.0</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>这里安装2.6版本，防止会出现另一个错误</p><a id="more"></a><p>安装git依赖<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zlib-devel openssl-devel perl hg cpio expat-devel gettext-devel curl curl-devel perl-ExtUtils-MakeMaker hg wget gcc gcc-c++</span><br></pre></td></tr></table></figure><p></p><p>下载git<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//www.kernel.org/pub/software/scm/git/git-2.6.0.tar.gz</span></span><br></pre></td></tr></table></figure><p></p><p>解压git<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf git-2.6.0.tar.gz</span><br></pre></td></tr></table></figure><p></p><p>编译git<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd git-2.6.0</span><br><span class="line">./configure --prefix=/usr/local/git</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p></p><p>创建git软连接<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/git/bin/* /usr/bin/</span><br></pre></td></tr></table></figure><p></p><h2 id="安装go环境"><a href="#安装go环境" class="headerlink" title="安装go环境"></a>安装go环境</h2><p>准备go环境，32位的请选择386包，64位的请选择amd64 (<a href="https://www.golangtc.com/static/go/" target="_blank" rel="noopener">https://www.golangtc.com/static/go/</a>)<br>这里选择的是1.9版本的64位：<a href="https://www.golangtc.com/static/go/1.9/go1.9.linux-amd64.tar.gz" target="_blank" rel="noopener">https://www.golangtc.com/static/go/1.9/go1.9.linux-amd64.tar.gz</a><br>下载安装包<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.golangtc.com/static/go/1.9/go1.9.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p></p><p>解压并移动<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf go1.9.linux-amd64.tar.gz</span><br><span class="line">mv go /usr/local/</span><br></pre></td></tr></table></figure><p></p><p>创建软连接<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/go/bin/* /usr/bin/</span><br></pre></td></tr></table></figure><p></p><h2 id="编译ngrok"><a href="#编译ngrok" class="headerlink" title="编译ngrok"></a>编译ngrok</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">git clone https://github.com/inconshreveable/ngrok.git</span><br><span class="line">export GOPATH=/usr/local/ngrok/</span><br><span class="line">export NGROK_DOMAIN=&quot;ngrok.simayubo.cc&quot; #你的域名</span><br><span class="line">cd ngrok</span><br></pre></td></tr></table></figure><h2 id="为域名生成证书"><a href="#为域名生成证书" class="headerlink" title="为域名生成证书"></a>为域名生成证书</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out rootCA.key 2048</span><br><span class="line">openssl req -x509 -new -nodes -key rootCA.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -days 5000 -out rootCA.pem</span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line">openssl req -new -key server.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out server.csr</span><br><span class="line">openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000</span><br></pre></td></tr></table></figure><h2 id="拷贝证书到指定位置"><a href="#拷贝证书到指定位置" class="headerlink" title="拷贝证书到指定位置"></a>拷贝证书到指定位置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp rootCA.pem assets/client/tls/ngrokroot.crt</span><br><span class="line">cp server.crt assets/server/tls/snakeoil.crt</span><br><span class="line">cp server.key assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure><p>如果是国内服务器，需要修改下载源<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/ngrok/src/ngrok/log/logger.go</span><br><span class="line">log &quot;github.com/keepeye/log4go&quot;</span><br></pre></td></tr></table></figure><p></p><h2 id="编译ngrok服务端"><a href="#编译ngrok服务端" class="headerlink" title="编译ngrok服务端"></a>编译ngrok服务端</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/go/src</span><br><span class="line">GOOS=linux GOARCH=amd64 ./make.bash  #这里请注意32位位386，64位位amd64</span><br><span class="line">cd /usr/local/ngrok/</span><br><span class="line">GOOS=linux GOARCH=386 make release-server</span><br></pre></td></tr></table></figure><h2 id="编译客户端"><a href="#编译客户端" class="headerlink" title="编译客户端"></a>编译客户端</h2><p>MAC OS<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/go/src</span><br><span class="line">GOOS=darwin GOARCH=amd64 ./make.bash #这里请注意32位位386，64位位amd64</span><br><span class="line">cd /usr/local/ngrok/</span><br><span class="line">GOOS=darwin GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><p></p><p>Windows<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/go/src</span><br><span class="line">GOOS=windows GOARCH=amd64 ./make.bash</span><br><span class="line">cd /usr/local/ngrok/</span><br><span class="line">GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><p></p><h2 id="服务端启动"><a href="#服务端启动" class="headerlink" title="服务端启动"></a>服务端启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/ngrok/bin/ngrokd -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot;</span><br></pre></td></tr></table></figure><p>后台启动：<code>setsid /usr/local/ngrok/bin/ngrokd -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot;</code></p><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><p>这里简单说明Windows<br>从服务器下载编译好的客户端，路径<code>/usr/local/ngrok/bin</code><br>在客户端同目录新建文件<code>ngrok.cfg</code>，并粘贴下面内容：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_addr: &quot;ngrok.simayubo.cc:4443&quot;</span><br><span class="line">trust_host_root_certs: false</span><br></pre></td></tr></table></figure><p></p><p>按住Shift键，单击右键’在此处打开命令框’,键入以下命令<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok -config=./ngrok.cfg -subdomain=test 80</span><br></pre></td></tr></table></figure><p></p><p>如果不出意外将会出现以下界面<br><img src="https://iuu.st/uploads/iuu/20180915/46df2149f2ea90cc292fcc3587a9ac14.jpg" alt="P5B.jpg"></p><h2 id="错误调试"><a href="#错误调试" class="headerlink" title="错误调试"></a>错误调试</h2><h4 id="Failed-to-read-message-remote-error-bad-certificate"><a href="#Failed-to-read-message-remote-error-bad-certificate" class="headerlink" title="Failed to read message: remote error: bad certificate"></a>Failed to read message: remote error: bad certificate</h4><p>请重新生成证书，重新编译服务端和客户端，并且注意域名一定都要一样！</p><h4 id="Failed-to-read-valid-http-request-malformed-HTTP-request"><a href="#Failed-to-read-valid-http-request-malformed-HTTP-request" class="headerlink" title="Failed to read valid http request: malformed HTTP request"></a>Failed to read valid http request: malformed HTTP request</h4><p>检查 <code>ngrok.cfg</code> 文件里的端口号是否与 Listening for control and proxy connections on [::]:4443 后的端口号一致。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ngrok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql主从复制简单配置过程</title>
      <link href="/archives/895e120/"/>
      <url>/archives/895e120/</url>
      
        <content type="html"><![CDATA[<p>Mysql主从复制在数据库优化方面是一个很常用的方法，数据库的读写分离、分布式都需要多个服务器之间数据库数据同步，比如读写分离，主数据库负责写数据，其它从服务器负责读数据，这样很大避免了高并发写数据库锁库、数据库负载过高等问题。</p><h2 id="【准备】"><a href="#【准备】" class="headerlink" title="【准备】"></a>【准备】</h2><h3 id="主数据库："><a href="#主数据库：" class="headerlink" title="主数据库："></a>主数据库：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IP：192.168.199.100</span><br><span class="line">Mysql版本：5.5</span><br><span class="line">操作系统：CentOS 7.1</span><br></pre></td></tr></table></figure><h3 id="从数据库："><a href="#从数据库：" class="headerlink" title="从数据库："></a>从数据库：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IP：192.168.199.227</span><br><span class="line">Mysql版本：5.5</span><br><span class="line">操作系统：CentOS 7.1</span><br></pre></td></tr></table></figure><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><ul><li>保持mysql版本一致性</li><li>如果你的系统开启了防火墙，请将数据库端口（3306）添加白名单，不然无法通信。<a id="more"></a></li></ul><h2 id="【配置主数据库】"><a href="#【配置主数据库】" class="headerlink" title="【配置主数据库】"></a>【配置主数据库】</h2><h3 id="创建一个新用户"><a href="#创建一个新用户" class="headerlink" title="创建一个新用户:"></a>创建一个新用户:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user master</span><br></pre></td></tr></table></figure><h3 id="授权该用户访问权限"><a href="#授权该用户访问权限" class="headerlink" title="授权该用户访问权限:"></a>授权该用户访问权限:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT REPLICATION SLAVE ON *.* TO 'master'@'192.168.%.%' IDENTIFIED BY 'mysql';</span><br></pre></td></tr></table></figure><blockquote><p>用户必须具有REPLICATION SLAVE权限，除此之外没有必要添加不必要的权限，密码为mysql。说明一下192.168.%.%，这个配置是指明master用户所在服务器，这里%是通配符，表示192.168.0.0-192.168.255.255的Server都可以以master用户登陆主服务器。当然你也可以指定固定Ip。</p></blockquote><h3 id="找到MySQL安装文件夹修改my-cnf文件-在-mysqld-下面增加下面几行代码"><a href="#找到MySQL安装文件夹修改my-cnf文件-在-mysqld-下面增加下面几行代码" class="headerlink" title="找到MySQL安装文件夹修改my.cnf文件,在[mysqld]下面增加下面几行代码"></a>找到MySQL安装文件夹修改my.cnf文件,在[mysqld]下面增加下面几行代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server-id=1   <span class="comment">#给数据库服务的唯一标识，必须唯一</span></span><br><span class="line"><span class="built_in">log</span>-bin=master-bin</span><br><span class="line"><span class="built_in">log</span>-bin-index=master-bin.index</span><br></pre></td></tr></table></figure><h3 id="执行-show-master-status"><a href="#执行-show-master-status" class="headerlink" title="执行 show master status;"></a>执行 show master status;</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+-------------------+----------+--------------+------------------+</span><br><span class="line">| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+-------------------+----------+--------------+------------------+</span><br><span class="line">| master-bin.000005 |      796 |              |                  |</span><br><span class="line">+-------------------+----------+--------------+------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>这里一定要记住File和Position，在从数据库中要用到，我这里分别是 master-bin.000005 和 796</p></blockquote><h3 id="重启MySQL服务"><a href="#重启MySQL服务" class="headerlink" title="重启MySQL服务"></a>重启MySQL服务</h3><h2 id="【配置从数据库】"><a href="#【配置从数据库】" class="headerlink" title="【配置从数据库】"></a>【配置从数据库】</h2><h3 id="打开my-cnf配置文件，在-mysqld-下加入"><a href="#打开my-cnf配置文件，在-mysqld-下加入" class="headerlink" title="打开my.cnf配置文件，在[mysqld]下加入"></a>打开my.cnf配置文件，在[mysqld]下加入</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server-id</span>=<span class="number">2</span> #必须唯一</span><br><span class="line"><span class="attr">relay-log-index</span>=slave-relay-bin.index</span><br><span class="line"><span class="attr">relay-log</span>=slave-relay-bin</span><br></pre></td></tr></table></figure><h3 id="重启MySQL服务-1"><a href="#重启MySQL服务-1" class="headerlink" title="重启MySQL服务"></a>重启MySQL服务</h3><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host='192.168.199.100', #ip为主数据库的ip地址</span><br><span class="line">master_port=3306, #主数据库端口</span><br><span class="line">master_user='master',  #上面添加的主数据库用户</span><br><span class="line">master_password='mysql',  #主数据库密码</span><br><span class="line">master_log_file='master-bin.000005', #主服务器产生的日志</span><br><span class="line">master_log_pos=796;</span><br></pre></td></tr></table></figure><h3 id="启动slave"><a href="#启动slave" class="headerlink" title="启动slave"></a>启动slave</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> stop slave;</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><h2 id="【到了这个步骤基本就已经完成了】"><a href="#【到了这个步骤基本就已经完成了】" class="headerlink" title="【到了这个步骤基本就已经完成了】"></a>【到了这个步骤基本就已经完成了】</h2><p>可以运行下面命令来验证状态<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show slave status\G </span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 192.168.199.100</span><br><span class="line">                  Master_User: master</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: master-bin.000005</span><br><span class="line">          Read_Master_Log_Pos: 492</span><br><span class="line">               Relay_Log_File: localhost-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 254</span><br><span class="line">        Relay_Master_Log_File: master-bin.000005</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 492</span><br><span class="line">              Relay_Log_Space: 414</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p></p><p>关键是<br>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes<br>这两个状态</p><p>Slave_IO_Running: No 一般是因为防火墙没有添加mysql端口白名单，其它错误请查看Last_IO_Error<br>Slave_SQL_Running: No 可能是因为两个数据库数据不一致，可以重新设定从数据库对应主数据库的 Position （show master status;）</p><p>这时候你可以在主数据库新建数据库，添加数据表等操作都会同时同步到从数据库<br><img src="https://iuu.st/uploads/iuu/20180915/41a1b925641dd79aca32f9a3cbe3e0ba.jpg" alt="JBe.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 主从复制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APP接口Token生成方案php-jwt</title>
      <link href="/archives/770352bb/"/>
      <url>/archives/770352bb/</url>
      
        <content type="html"><![CDATA[<h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require firebase/php-jwt</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="首先引入JWT"><a href="#首先引入JWT" class="headerlink" title="首先引入JWT"></a>首先引入JWT</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Firebase</span>\<span class="title">JWT</span>\<span class="title">JWT</span>;</span><br></pre></td></tr></table></figure><h4 id="用户登录后生成token"><a href="#用户登录后生成token" class="headerlink" title="用户登录后生成token"></a>用户登录后生成token</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$user = User::where([<span class="string">'phone'</span> =&gt; $data[<span class="string">'phone'</span>], <span class="string">'password'</span> =&gt; md5($data[<span class="string">'password'</span>])])-&gt;find();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($user)&#123;</span><br><span class="line">   $token = <span class="keyword">$this</span>-&gt;getToken($user);</span><br><span class="line">   <span class="keyword">$this</span>-&gt;returnMsg(<span class="keyword">true</span>, <span class="string">'登录成功'</span>, <span class="number">0</span>, [<span class="string">'token'</span> =&gt; $token]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;returnMsg(<span class="keyword">false</span>, <span class="string">'账号或密码错误'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="生成Token方法"><a href="#生成Token方法" class="headerlink" title="生成Token方法"></a>生成Token方法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户信息获取token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getToken</span><span class="params">($user)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    $tokenId    = base64_encode(mcrypt_create_iv(<span class="number">32</span>));</span><br><span class="line">    $issuedAt   = time();</span><br><span class="line">    $notBefore  = $issuedAt;</span><br><span class="line">    $expire     = $notBefore + config(<span class="string">'jwt.expire_time'</span>);</span><br><span class="line">    $serverName = <span class="string">'127.0.0.1'</span>;</span><br><span class="line"></span><br><span class="line">    $data = [</span><br><span class="line">        <span class="string">'iat'</span>  =&gt; $issuedAt, <span class="comment">//jwt的签发时间</span></span><br><span class="line">        <span class="string">'jti'</span>  =&gt; $tokenId, <span class="comment">//jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。</span></span><br><span class="line">        <span class="string">'iss'</span>  =&gt; $serverName, <span class="comment">//jwt签发者</span></span><br><span class="line">        <span class="string">'nbf'</span>  =&gt; $notBefore, <span class="comment">//定义在什么时间之前，该jwt都是不可用的.</span></span><br><span class="line">        <span class="string">'exp'</span>  =&gt; $expire, <span class="comment">//jwt的过期时间，这个过期时间必须要大于签发时间</span></span><br><span class="line">        <span class="string">'data'</span> =&gt; [ <span class="comment">//附带数据，这里用来存储用户的id</span></span><br><span class="line">            <span class="string">'userId'</span>   =&gt; $user-&gt;id</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $token = JWT::encode($data, <span class="string">'这里为自定义秘钥（zzz）'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $token; <span class="comment">//返回token</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接受token，并且获取用户信息"><a href="#接受token，并且获取用户信息" class="headerlink" title="接受token，并且获取用户信息"></a>接受token，并且获取用户信息</h4><p>app请求时，可以把上面生成的token，放在请求头，get参数，post参数等，我们这里是放在了header，例如<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0OTQzMTQ3NjQsImp0aSI6IjFQQ0UyejlDRmdGeXZUVHNSRXZESXkzT3k3VGcyMHo0TDNvOGhDMjRzTkE9IiwiaXNzIjoiMTI3LjAuMC4xIiwibmJmIjoxNDk0MzE0NzY0LCJleHAiOjE0OTU2MTA3NjQsImRhdGEiOnsidXNlcklkIjo0fX0.ZBr-zABH8-eby_Wut1oLKJWk27Cfm_g5_WV560Gwmpg</span><br></pre></td></tr></table></figure><p></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过Token获取用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array|false|\PDOStatement|string|\think\Model</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getUser</span><span class="params">($token = <span class="string">''</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($token == <span class="string">''</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($_SERVER[<span class="string">'REDIRECT_HTTP_AUTHORIZATION'</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;returnMsg(<span class="keyword">false</span>, <span class="string">'Token缺失'</span>, <span class="number">10001</span>, [], <span class="number">401</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $token = $_SERVER[<span class="string">'REDIRECT_HTTP_AUTHORIZATION'</span>];  <span class="comment">//从header中接收token</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//从token中取出数据</span></span><br><span class="line">        $jwt_data = JWT::decode($token, <span class="string">'这里是秘钥，自己随便填写（zzz）'</span>, <span class="keyword">array</span>(<span class="string">'HS256'</span>));</span><br><span class="line">        <span class="comment">//获取用户信息</span></span><br><span class="line">        $user_info = User::find($jwt_data-&gt;data-&gt;userId); </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($user_info))  <span class="keyword">$this</span>-&gt;returnMsg(<span class="keyword">false</span>, <span class="string">'用户不存在'</span>, <span class="number">10004</span>, [], <span class="number">401</span>);</span><br><span class="line">        <span class="keyword">if</span> ($user_info-&gt;status == <span class="number">-1</span>) <span class="keyword">$this</span>-&gt;returnMsg(<span class="keyword">false</span>, <span class="string">'用户已被禁用'</span>, <span class="number">10005</span>, [], <span class="number">401</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $user_info;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">catch</span>(\<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">        <span class="comment">//通过捕获异常来判断app是否需要重新登陆获取token</span></span><br><span class="line">        <span class="keyword">if</span> ($e-&gt;getMessage() == <span class="string">'Expired token'</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">$this</span>-&gt;returnMsg(<span class="keyword">false</span>, <span class="string">'Token过期'</span>, <span class="number">10003</span>, [], <span class="number">401</span>); <span class="comment">//token过期</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;returnMsg(<span class="keyword">false</span>, <span class="string">'Token错误'</span>, <span class="number">10002</span>, [], <span class="number">401</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//后面还有其他错误，这里不进行一一说明</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，现在给予token的app保持用户状态已经基本可以用了，需要获取用户信息的时候，直接调用 <code>getUser()</code>方法，该方法会自动判断用户状态，如果没有登录或者没有请求token，会自动反馈给APP，APP自动跳转到登录页面。</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php-jwt </tag>
            
            <tag> Token </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>virtualbox下最小化安装centos7后上网设置</title>
      <link href="/archives/92bf9786/"/>
      <url>/archives/92bf9786/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在虚拟机中以最小化方式安装centos7，后无法上网。</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>因为centos7默认网卡未激活。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>编辑<code>ifcfg-enp0s3</code><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure><p></p><p>将最后一行 <code>ONBOOT=no</code> 改为 <code>ONBOOT=yes</code><br>保存并退出<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esc -&gt; !wq</span><br></pre></td></tr></table></figure><p></p><p>重启网卡<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><p></p><p>问题解决</p><a id="more"></a><p><img src="https://simayubocc.oss-cn-hangzhou.aliyuncs.com/img/2017/01/2379295140.png" alt="QQ截图20170116195750.png"></p><h2 id="另外"><a href="#另外" class="headerlink" title="另外"></a>另外</h2><p>因为是最小化安装，此时ifconfig命令不能用，可用</p><p>命令：<code>ip addr</code> 查看分配网卡情况。</p><p>联网后可运行命令：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><p></p><p>来安装ifconfig功能</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> virtualbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一款兼容各大浏览器的JavaScript复制工具clipboard</title>
      <link href="/archives/465ab45e/"/>
      <url>/archives/465ab45e/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>clipboard.js是一款轻量级的实现复制文本到剪贴板功能的JavaScript插件，脱离falsh复制插件。通过该插件可以将输入框，文本域，DIV元素中的文本等文本内容复制到剪贴板中<br>clipboard.js支持主流的浏览器：chrome 42+; Firefox 41+; IE 9+; opera 29+; Safari 10+;<br>官网：<a href="https://clipboardjs.com/" target="_blank" rel="noopener">https://clipboardjs.com/</a><br>下载地址：<a href="https://github.com/zenorocha/clipboard.js/archive/master.zip" target="_blank" rel="noopener">https://github.com/zenorocha/clipboard.js/archive/master.zip</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>引入js文件<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"dist/clipboard.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><p>html代码<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"cursor: pointer;"</span> <span class="attr">class</span>=<span class="string">"_copy"</span> <span class="attr">data-uri</span>=<span class="string">"http://baidu.com"</span>&gt;</span>复制地址<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><p>Js代码<br></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'._copy'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> uri = $(<span class="keyword">this</span>).attr(<span class="string">'data-uri'</span>);</span><br><span class="line">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'._copy'</span>, &#123;</span><br><span class="line">        text: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> uri;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        alert(<span class="string">'复制成功'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    clipboard.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        alert(<span class="string">'您的浏览器不支持复制，请手动复制！'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP笛卡尔积计算函数</title>
      <link href="/archives/5d456def/"/>
      <url>/archives/5d456def/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天写商品规格匹配的时候，用到了多数组交叉匹配，所以就用到了这个东西。</p></blockquote><h2 id="笛卡尔乘积"><a href="#笛卡尔乘积" class="headerlink" title="笛卡尔乘积"></a>笛卡尔乘积</h2><p>笛卡尔乘积是指在数学中，两个集合X和Y的笛卡尓积，又称直积，表示为X × Y，第一个对象是X的成员而第二个对象是Y的所有可能有序对的其中一个成员。<br>假设集合A={a, b}，集合B={0, 1, 2}，则两个集合的笛卡尔积为{(a, 0), (a, 1), (a, 2), (b, 0), (b, 1), (b, 2)}。</p><a id="more"></a><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">descartes</span><span class="params">($arr)</span></span>&#123;</span><br><span class="line">    $arr1 = <span class="keyword">array</span>();</span><br><span class="line">    $result = array_shift($arr);</span><br><span class="line">    <span class="keyword">while</span>($arr2 = array_shift($arr))&#123;</span><br><span class="line">        $arr1 = $result;</span><br><span class="line">        $result = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span>($arr1 <span class="keyword">as</span> $v)&#123;</span><br><span class="line">            <span class="keyword">foreach</span>($arr2 <span class="keyword">as</span> $v2)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!is_array($v))$v = <span class="keyword">array</span>($v);</span><br><span class="line">                <span class="keyword">if</span>(!is_array($v2))$v2 = <span class="keyword">array</span>($v2);</span><br><span class="line">                $result[] = array_merge_recursive($v,$v2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数可以实现任意个数数组的计算，比如下面：</p><p><img src="https://simayubocc.oss-cn-hangzhou.aliyuncs.com/img/2017/07/316064195.png" alt="QQ截图20170707141512.png"></p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composer中国镜像pkg.phpcomposer.com</title>
      <link href="/archives/f2ce2a40/"/>
      <url>/archives/f2ce2a40/</url>
      
        <content type="html"><![CDATA[<h2 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h2><h3 id="有两种方式启用本镜像服务："><a href="#有两种方式启用本镜像服务：" class="headerlink" title="有两种方式启用本镜像服务："></a>有两种方式启用本镜像服务：</h3><p>系统全局配置： 即将配置信息添加到 Composer 的全局配置文件 config.json 中。见“例1”<br>单个项目配置： 将配置信息添加到某个项目的 composer.json 文件中。见“例2”</p><h3 id="例1：修改-composer-的全局配置文件（推荐方式）"><a href="#例1：修改-composer-的全局配置文件（推荐方式）" class="headerlink" title="例1：修改 composer 的全局配置文件（推荐方式）"></a>例1：修改 composer 的全局配置文件（推荐方式）</h3><p>打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g -e</span><br></pre></td></tr></table></figure><p></p><p>将内容替换掉<br></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"repositories"</span>: [</span><br><span class="line">        &#123; <span class="attr">"packagist"</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"composer"</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"https://packagist.phpcomposer.com"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><a id="more"></a><h3 id="例2：修改当前项目的-composer-json-配置文件："><a href="#例2：修改当前项目的-composer-json-配置文件：" class="headerlink" title="例2：修改当前项目的 composer.json 配置文件："></a>例2：修改当前项目的 composer.json 配置文件：</h3><p>打开命令行窗口（windows用户）或控制台（Linux、Mac 用户），进入你的项目的根目录（也就是 composer.json 文件所在目录），执行如下命令：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure><p></p><p>上述命令将会在当前项目中的 composer.json 文件的末尾自动添加镜像的配置信息（你也可以自己手工添加）：<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"repositories": &#123;</span><br><span class="line">    "packagist": &#123;</span><br><span class="line">        "type": "composer",</span><br><span class="line">        "url": "https://packagist.phpcomposer.com"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>以 laravel 项目的 composer.json 配置文件为例，执行上述命令后如下所示（注意最后几行）：<br></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"laravel/laravel"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"The Laravel Framework."</span>,</span><br><span class="line">    <span class="attr">"keywords"</span>: [<span class="string">"framework"</span>, <span class="string">"laravel"</span>],</span><br><span class="line">    <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"project"</span>,</span><br><span class="line">    <span class="attr">"require"</span>: &#123;</span><br><span class="line">        <span class="attr">"php"</span>: <span class="string">"&gt;=5.5.9"</span>,</span><br><span class="line">        <span class="attr">"laravel/framework"</span>: <span class="string">"5.2.*"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"require-dev"</span>: &#123;</span><br><span class="line">        <span class="attr">"fzaninotto/faker"</span>: <span class="string">"~1.4"</span>,</span><br><span class="line">        <span class="attr">"mockery/mockery"</span>: <span class="string">"0.9.*"</span>,</span><br><span class="line">        <span class="attr">"phpunit/phpunit"</span>: <span class="string">"~4.0"</span>,</span><br><span class="line">        <span class="attr">"symfony/css-selector"</span>: <span class="string">"2.8.*|3.0.*"</span>,</span><br><span class="line">        <span class="attr">"symfony/dom-crawler"</span>: <span class="string">"2.8.*|3.0.*"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"autoload"</span>: &#123;</span><br><span class="line">        <span class="attr">"classmap"</span>: [</span><br><span class="line">            <span class="string">"database"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"psr-4"</span>: &#123;</span><br><span class="line">            <span class="attr">"App\\"</span>: <span class="string">"app/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"autoload-dev"</span>: &#123;</span><br><span class="line">        <span class="attr">"classmap"</span>: [</span><br><span class="line">            <span class="string">"tests/TestCase.php"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"post-root-package-install"</span>: [</span><br><span class="line">            <span class="string">"php -r \"copy('.env.example', '.env');\""</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"post-create-project-cmd"</span>: [</span><br><span class="line">            <span class="string">"php artisan key:generate"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"post-install-cmd"</span>: [</span><br><span class="line">            <span class="string">"php artisan clear-compiled"</span>,</span><br><span class="line">            <span class="string">"php artisan optimize"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"pre-update-cmd"</span>: [</span><br><span class="line">            <span class="string">"php artisan clear-compiled"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"post-update-cmd"</span>: [</span><br><span class="line">            <span class="string">"php artisan optimize"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"config"</span>: &#123;</span><br><span class="line">        <span class="attr">"preferred-install"</span>: <span class="string">"dist"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"repositories"</span>: &#123;</span><br><span class="line">        <span class="attr">"packagist"</span>: &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"composer"</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"https://packagist.phpcomposer.com"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>OK，一切搞定！试一下 <code>composer install</code> 来体验飞一般的速度吧！<br>镜像说明：<br>一般情况下，安装包的数据（主要是 zip 文件）一般是从 github.com 上下载的，安装包的元数据是从 packagist.org 上下载的。<br>然而，由于众所周知的原因，国外的网站连接速度很慢，并且随时可能被“墙”甚至“不存在”。</p><p>“Packagist 中国全量镜像”所做的就是缓存所有安装包和元数据到国内的机房并通过国内的 CDN 进行加速，这样就不必再去向国外的网站发起请求，从而达到加速 <code>composer install</code> 以及 <code>composer update</code> 的过程，并且更加快速、稳定。因此，即使 packagist.org、github.com 发生故障（主要是连接速度太慢和被墙），你仍然可以下载、更新安装包。</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装最新内核并开启 BBR TCP加速脚本</title>
      <link href="/archives/cf59ca96/"/>
      <url>/archives/cf59ca96/</url>
      
        <content type="html"><![CDATA[<p>最近，Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，最新的 4.11版内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。<br>根据实地测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。<br>这个脚本是网友提供的一个一键脚本，挺好用的。<br><a id="more"></a></p><blockquote><p>本脚本适用环境<br>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+<br>虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware 等<br>内存要求：≥128M<br>日期　　：2017 年 05 月 15 日</p></blockquote><h2 id="关于本脚本"><a href="#关于本脚本" class="headerlink" title="关于本脚本"></a>关于本脚本</h2><ol><li>本脚本已在 Vultr 上的 VPS 全部测试通过。（博主是在virmach上的128M的KVM，Ubuntu 14.04 x64上安装的）</li><li>当脚本检测到 VPS 的虚拟方式为 OpenVZ 时，会提示错误，并自动退出安装。</li><li>脚本运行完重启发现开不了机的，打开 VPS 后台控制面板的 VNC, 开机卡在 grub 引导, 手动选择内核即可。</li><li>由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用root用户登录，运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line">chmod +x bbr.sh</span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure><p>安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。<br>重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><p>查看内核版本，含有 4.11 就表示 OK 了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>返回值一般为：<br>net.ipv4.tcp_available_congestion_control = bbr cubic reno</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure><p>返回值一般为：<br>net.ipv4.tcp_congestion_control = bbr</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.core.default_qdisc</span><br></pre></td></tr></table></figure><p>返回值一般为：<br>net.core.default_qdisc = fq</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><p>返回值有 tcp_bbr 模块即说明bbr已启动。</p><p>加速后效果（1080p都毫无压力）</p><hr><h2 id="OVZ已有解决方案-已打上魔改bbr-："><a href="#OVZ已有解决方案-已打上魔改bbr-：" class="headerlink" title="OVZ已有解决方案(已打上魔改bbr)："></a>OVZ已有解决方案(已打上魔改bbr)：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kuoruan/shell-scripts/master/ovz-bbr/ovz-bbr-installer.sh</span><br><span class="line">chmod +x ovz-bbr-installer.sh</span><br><span class="line">./ovz-bbr-installer.sh</span><br></pre></td></tr></table></figure><p>已测试通过的系统： Ubuntu 14.04 x64、Ubuntu 16.04 x64、CentOS 6 x64、CentOS 7 x64 只支持 64 位系统，要求 glibc 版本 2.14 以上。</p><p>需要配置的有如下几个选项：</p><ol><li>需要加速的端口，即的 SS 端口。加速开启之后，流量会先经过 BBR 处理，之后再发送给后端的 SS。</li><li>可能需要配置 “公网接口名称”，即你服务器上具有公网 IP 的接口名称。搬瓦工 OpenVZ 上默认都是 venet0，但是有朋友可能需要安装在其他服务器上，所以我加入了此选项。</li></ol><p>需要注意的是，在有 firewalld 的服务器上安装的时候，firewalld 会干扰 iptables 的规则，造成网络不通（现在具体原因未知，谁有解决方案可以提示一下）。所以在装有 firewalld 的服务器上需要先退出 firewalld：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>如需卸载，请使用：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ovz-bbr-installer.sh uninstall</span><br></pre></td></tr></table></figure><p></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BBR </tag>
            
            <tag> TCP加速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Paypal预授权支付</title>
      <link href="/archives/91e1b962/"/>
      <url>/archives/91e1b962/</url>
      
        <content type="html"><![CDATA[<p>因为paypal退款也有手续费，所以可以使用预授权支付，订单产生后，你可以检验订单是否存在欺诈行为，如果存在，则取消订单付款授权，因为你并没有收取用户费用，所以这样不会产生手续费！</p><h2 id="安装composer包"><a href="#安装composer包" class="headerlink" title="安装composer包"></a>安装composer包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require &quot;paypal/rest-api-sdk-php&quot;</span><br></pre></td></tr></table></figure><h2 id="申请Paypal应用"><a href="#申请Paypal应用" class="headerlink" title="申请Paypal应用"></a>申请Paypal应用</h2><ul><li>创建paypal开发者账号：<a href="https://developer.paypal.com/" target="_blank" rel="noopener">https://developer.paypal.com/</a></li><li>创建应用：<br>找到<code>REST API apps</code>,然后常见应用<code>Create App</code>:</li></ul><a id="more"></a><p><img src="https://simayubocc.oss-cn-hangzhou.aliyuncs.com/img/2017/09/3006909208.jpg" alt="QQ截图20170905230622.jpg"></p><ul><li>创建成功后，你可以拿到<code>Client ID</code>和<code>Secret</code>，（这里分sandbox（测试）和live（正式））</li></ul><p><img src="https://simayubocc.oss-cn-hangzhou.aliyuncs.com/img/2017/09/2749984631.jpg" alt="QQ截图20170905230925.jpg"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * paypal支付</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">paypal</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//预授权支付</span></span><br><span class="line">        $apiContext = <span class="keyword">new</span> ApiContext(</span><br><span class="line">            <span class="keyword">new</span> OAuthTokenCredential(</span><br><span class="line">                <span class="keyword">$this</span>-&gt;config[<span class="string">'PAYPAL_APPID'</span>], <span class="comment">//Client ID</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;config[<span class="string">'PAYPAL_APPKEY'</span>]  <span class="comment">//Secret</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        $apiContext-&gt;setConfig([<span class="string">'mode'</span> =&gt; <span class="string">'live'</span>]); <span class="comment">//如果使用正式环境，请加上这个</span></span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">catch</span> (\<span class="keyword">Exception</span> $exception)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'系统错误：'</span>.$exception-&gt;getMessage(), url(<span class="string">'home/user/order'</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $payer = <span class="keyword">new</span> Payer();</span><br><span class="line">    $payer-&gt;setPaymentMethod(<span class="string">"paypal"</span>);  <span class="comment">//支付方式 "credit_card", "bank", "paypal", "pay_upon_invoice", "carrier", "alternate_payment"</span></span><br><span class="line"></span><br><span class="line">    $item1 = <span class="keyword">new</span> Item();</span><br><span class="line">    $item1-&gt;setName(<span class="string">'游戏充值'</span>) <span class="comment">//商品名</span></span><br><span class="line">        -&gt;setCurrency(<span class="string">'USD'</span>)  <span class="comment">//支付货币</span></span><br><span class="line">        -&gt;setQuantity(<span class="number">1</span>) <span class="comment">//数量</span></span><br><span class="line">        -&gt;setPrice(<span class="number">18.60</span>); <span class="comment">//金额</span></span><br><span class="line"></span><br><span class="line">    $itemList = <span class="keyword">new</span> ItemList();</span><br><span class="line">    $itemList-&gt;setItems(<span class="keyword">array</span>($item1)); <span class="comment">//商品，这里可以传入多个array($item1, $item2)</span></span><br><span class="line"></span><br><span class="line">    $details = <span class="keyword">new</span> Details();</span><br><span class="line"></span><br><span class="line">    $amount = <span class="keyword">new</span> Amount();</span><br><span class="line">    $amount-&gt;setCurrency(<span class="string">'USD'</span>) <span class="comment">//货币</span></span><br><span class="line">        -&gt;setTotal(<span class="number">18.60</span>) <span class="comment">//总金额</span></span><br><span class="line">        -&gt;setDetails($details);</span><br><span class="line"></span><br><span class="line">    $transaction = <span class="keyword">new</span> Transaction();</span><br><span class="line">    $transaction-&gt;setAmount($amount)</span><br><span class="line">        -&gt;setItemList($itemList)</span><br><span class="line">        -&gt;setInvoiceNumber(<span class="string">'KT123456789'</span>); <span class="comment">//订单号</span></span><br><span class="line"></span><br><span class="line">    $baseUrl = getBaseUrl();</span><br><span class="line">    $redirectUrls = <span class="keyword">new</span> RedirectUrls();</span><br><span class="line">    $redirectUrls-&gt;setReturnUrl(<span class="string">"$baseUrl/home/pay/auth_return?success=true"</span>)  <span class="comment">//授权登录后跳转地址</span></span><br><span class="line">        -&gt;setCancelUrl(<span class="string">"$baseUrl/home/pay/suc/id/&#123;$order_info['id']&#125;?success=false"</span>);  <span class="comment">//取消支付跳转地址</span></span><br><span class="line"></span><br><span class="line">    $payment = <span class="keyword">new</span> Payment();</span><br><span class="line">    $payment-&gt;setIntent(<span class="string">"authorize"</span>)</span><br><span class="line">        -&gt;setPayer($payer)</span><br><span class="line">        -&gt;setRedirectUrls($redirectUrls)</span><br><span class="line">        -&gt;setTransactions(<span class="keyword">array</span>($transaction));</span><br><span class="line"></span><br><span class="line">    $request = <span class="keyword">clone</span> $payment;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $payment-&gt;create($apiContext);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\<span class="keyword">Exception</span> $ex) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'错误：'</span>.$ex-&gt;getMessage(), url(<span class="string">'suc'</span>, [<span class="string">'id'</span> =&gt; $order_info[<span class="string">'id'</span>]]).<span class="string">'?success=false'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $approvalUrl = $payment-&gt;getApprovalLink();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;redirect($approvalUrl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="信息确认"><a href="#信息确认" class="headerlink" title="信息确认"></a>信息确认</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * paypal预授权回调(信息确认)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth_return</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//预授权支付</span></span><br><span class="line">        $apiContext = <span class="keyword">new</span> ApiContext(</span><br><span class="line">            <span class="keyword">new</span> OAuthTokenCredential(</span><br><span class="line">                <span class="keyword">$this</span>-&gt;config[<span class="string">'PAYPAL_APPID'</span>], <span class="comment">//Client ID</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;config[<span class="string">'PAYPAL_APPKEY'</span>]  <span class="comment">//Secret</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        $apiContext-&gt;setConfig([<span class="string">'mode'</span> =&gt; <span class="string">'live'</span>]);</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">catch</span> (\<span class="keyword">Exception</span> $exception)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'系统错误：'</span>.$exception-&gt;getMessage(), url(<span class="string">'home/user/order'</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'paymentId'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'token'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'PayerID'</span>])) &#123;</span><br><span class="line"></span><br><span class="line">        $paymentId = $_GET[<span class="string">'paymentId'</span>];</span><br><span class="line">        $payment = Payment::get($paymentId, $apiContext);</span><br><span class="line"></span><br><span class="line">        $transaction = $payment-&gt;transactions[<span class="number">0</span>]-&gt;toArray();</span><br><span class="line"></span><br><span class="line">        $execution = <span class="keyword">new</span> PaymentExecution();</span><br><span class="line">        $execution-&gt;setPayerId($_GET[<span class="string">'PayerID'</span>]);</span><br><span class="line"></span><br><span class="line">        $transaction = <span class="keyword">new</span> Transaction();</span><br><span class="line">        $amount = <span class="keyword">new</span> Amount();</span><br><span class="line">        $details = <span class="keyword">new</span> Details();</span><br><span class="line"></span><br><span class="line">        $amount-&gt;setCurrency(<span class="string">'USD'</span>); <span class="comment">//货币</span></span><br><span class="line">        $amount-&gt;setTotal(<span class="number">18.60</span>); <span class="comment">//总金额</span></span><br><span class="line">        $amount-&gt;setDetails($details);</span><br><span class="line">        $transaction-&gt;setAmount($amount);</span><br><span class="line"></span><br><span class="line">        $execution-&gt;addTransaction($transaction);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            $result = $payment-&gt;execute($execution, $apiContext);</span><br><span class="line">            <span class="keyword">if</span> ($result)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;success(<span class="string">'支付成功'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'支付失败'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $ex) &#123;</span><br><span class="line">            dd($ex-&gt;getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'参数错误'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="IPN回调"><a href="#IPN回调" class="headerlink" title="IPN回调"></a>IPN回调</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * paypal回调(使用的是ipn，注意这里没有用webhook，请在商户号中配置ipn地址，且配置支付便便为utf-8)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">paypal_return</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!request()-&gt;isPost()) <span class="keyword">die</span>();</span><br><span class="line">    $post = request()-&gt;post();</span><br><span class="line">  </span><br><span class="line">    $order_sn = $post[<span class="string">'invoice'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//$url = 'https://www.paypal.com/cgi-bin/webscr'; //正式live环境</span></span><br><span class="line">    $url = <span class="string">'https://www.sandbox.paypal.com/cgi-bin/webscr'</span>; <span class="comment">//sandbox测试环境</span></span><br><span class="line"></span><br><span class="line">    $data[<span class="string">'cmd'</span>] = <span class="string">'_notify-validate'</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($post <span class="keyword">as</span> $key =&gt; $item)  $data[$key] = ($item);  <span class="comment">//如果验证失败，请尝试加上urlencode，或者是编码错误</span></span><br><span class="line"></span><br><span class="line">    $res = <span class="keyword">$this</span>-&gt;http($url, $data, <span class="string">'POST'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($res))&#123;</span><br><span class="line">        <span class="keyword">if</span> (strcmp($res, <span class="string">"VERIFIED"</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($post[<span class="string">'payment_status'</span>] == <span class="string">'Completed'</span>) &#123;</span><br><span class="line">                <span class="comment">//付款完成</span></span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">elseif</span>($post[<span class="string">'payment_status'</span>] == <span class="string">'Refunded'</span>)&#123;</span><br><span class="line">                <span class="comment">//退款</span></span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">elseif</span>($post[<span class="string">'payment_status'</span>] == <span class="string">'Voided'</span>)&#123;</span><br><span class="line">                <span class="comment">//取消支付授权（作废订单）</span></span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">elseif</span>($post[<span class="string">'payment_status'</span>] == <span class="string">'Pending'</span>)&#123;</span><br><span class="line">                <span class="comment">//订单审核</span></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (strcmp ($res, <span class="string">"INVALID"</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//未通过认证，有可能是编码错误或非法的 POST 信息</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="comment">//未通过认证，有可能是编码错误或非法的 POST 信息</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"fail"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="curl助手函数："><a href="#curl助手函数：" class="headerlink" title="curl助手函数："></a>curl助手函数：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟提交参数，支持https提交 可用于各类api请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $url ： 提交的地址</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $data :POST数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $method : POST/GET，默认GET方式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">http</span><span class="params">($url, $data=<span class="string">''</span>, $method=<span class="string">'GET'</span>, $authorization = <span class="string">''</span>)</span></span>&#123;</span><br><span class="line">    $headers = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'Authorization: Bearer '</span>.$authorization,</span><br><span class="line">        <span class="string">'Content-Type'</span> =&gt; <span class="string">'x-www-form-urlencoded'</span></span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">    $curl = curl_init(); <span class="comment">// 启动一个CURL会话</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_URL, $url); <span class="comment">// 要访问的地址</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>); <span class="comment">// 对认证证书来源的检查</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>); <span class="comment">// 从证书中检查SSL加密算法是否存在</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]); <span class="comment">// 模拟用户使用的浏览器</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>); <span class="comment">// 使用自动跳转</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_AUTOREFERER, <span class="number">1</span>); <span class="comment">// 自动设置Referer</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($authorization))&#123;</span><br><span class="line">        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($method==<span class="string">'POST'</span>)&#123;</span><br><span class="line">        curl_setopt($curl, CURLOPT_POST, <span class="number">1</span>); <span class="comment">// 发送一个常规的Post请求</span></span><br><span class="line">        <span class="keyword">if</span> ($data != <span class="string">''</span>)&#123;</span><br><span class="line">            curl_setopt($curl, CURLOPT_POSTFIELDS, $data); <span class="comment">// Post提交的数据包</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    curl_setopt($curl, CURLOPT_TIMEOUT, <span class="number">30</span>); <span class="comment">// 设置超时限制防止死循环</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_HEADER, <span class="number">0</span>); <span class="comment">// 显示返回的Header区域内容</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); <span class="comment">// 获取的信息以文件流的形式返回</span></span><br><span class="line">    $tmpInfo = curl_exec($curl); <span class="comment">// 执行操作</span></span><br><span class="line">    curl_close($curl); <span class="comment">// 关闭CURL会话</span></span><br><span class="line">    <span class="keyword">return</span> $tmpInfo; <span class="comment">// 返回数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><ol><li>注意商户编码设为utf-8，不然ipn验证失败，在‘用户信息-用户信息与设置-销售工具-PayPal按钮语言编码-更多选项-否，请使用-选择 UTF-8’</li><li><p>出现下面情况（<strong>抱歉，我们现在无法完成您的购物 请返回到商家网站并选择其他付款方式。</strong>），请检查你的商户是否支持你支付账号所在的国家区域</p><p><img src="https://simayubocc.oss-cn-hangzhou.aliyuncs.com/img/2017/09/314671106.jpg" alt="QQ截图20170905233450.jpg"></p></li><li><p>ipn设置”用户信息-销售工具-即时付款通知-选择ipn设置”</p></li></ol><p>注：做的时候可能会出现很多问题，要注意的基本就这些，如果有其他问题可以留言告诉我！<br>还有就是不要忘记了引入命名空间哦！<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Amount</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Details</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Item</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">ItemList</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Payer</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Payment</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">PaymentExecution</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">RedirectUrls</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Api</span>\<span class="title">Transaction</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Auth</span>\<span class="title">OAuthTokenCredential</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PayPal</span>\<span class="title">Rest</span>\<span class="title">ApiContext</span>;</span><br></pre></td></tr></table></figure><p></p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 支付 </tag>
            
            <tag> paypal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PHPMailer包实现PHP的邮件发送</title>
      <link href="/archives/50155940/"/>
      <url>/archives/50155940/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>可能是世界上最流行的从PHP发送电子邮件的代码！</li><li>许多开源项目使用：WordPress，Drupal，1CRM，SugarCRM，Yii，Joomla！还有很多</li><li>集成SMTP支持 - 无需本地邮件服务器即可发送</li><li>发送多个TOs，CC，BCC和REPLY TO的电子邮件</li><li>不阅读HTML电子邮件的邮件客户端的多部分/替代电子邮件</li><li>支持UTF-8内容和8bit，base64，二进制和可引用打印编码</li><li>使用LOGIN，PLAIN，NTLM，CRAM-MD5和Google的XOAUTH2机制通过SSL和TLS传输进行SMTP验证</li><li>47种语言的错误信息！</li><li>DKIM和S / MIME签名支持</li><li>兼容PHP 5.0及更高版本</li><li>等等</li></ul><h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><p>Packagist：<a href="https://packagist.org/packages/phpmailer/phpmailer" target="_blank" rel="noopener">https://packagist.org/packages/phpmailer/phpmailer</a><br>Github：<a href="https://github.com/PHPMailer/PHPMailer" target="_blank" rel="noopener">https://github.com/PHPMailer/PHPMailer</a></p><a id="more"></a><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p>安装包<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require phpmailer/phpmailer</span><br></pre></td></tr></table></figure><p></p><p>首先编写一个函数<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 系统邮件发送函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $tomail 接收邮件者邮箱</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $name 接收邮件者名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $subject 邮件主题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $body 邮件内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $attachment 附件列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">send_mail</span><span class="params">($tomail_array, $attachment = null)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $mail = <span class="keyword">new</span> \PHPMailer();           <span class="comment">//实例化PHPMailer对象</span></span><br><span class="line">    $mail-&gt;CharSet = <span class="string">'UTF-8'</span>;           <span class="comment">//设定邮件编码，默认ISO-8859-1，如果发中文此项必须设置，否则乱码</span></span><br><span class="line">    $mail-&gt;IsSMTP();                    <span class="comment">// 设定使用SMTP服务</span></span><br><span class="line">    $mail-&gt;SMTPDebug = <span class="number">0</span>;               <span class="comment">// SMTP调试功能 0=关闭 1 = 错误和消息 2 = 消息</span></span><br><span class="line">    $mail-&gt;SMTPAuth = <span class="keyword">true</span>;             <span class="comment">// 启用 SMTP 验证功能</span></span><br><span class="line">    $mail-&gt;SMTPSecure = <span class="string">'ssl'</span>;          <span class="comment">// 使用安全协议</span></span><br><span class="line">    $mail-&gt;Host = <span class="string">"smtp.qq.com"</span>; <span class="comment">// SMTP 服务器</span></span><br><span class="line">    $mail-&gt;Port = <span class="number">465</span>;                  <span class="comment">// SMTP服务器的端口号</span></span><br><span class="line">    $mail-&gt;Username = <span class="string">"xxxxxxx"</span>;    <span class="comment">// SMTP服务器用户名</span></span><br><span class="line">    $mail-&gt;Password = <span class="string">"xxxxxxx"</span>;     <span class="comment">// SMTP服务器密码</span></span><br><span class="line"></span><br><span class="line">    $mail-&gt;SetFrom(<span class="string">'xxxxx@qq.com'</span>, <span class="string">'xxxx'</span>);</span><br><span class="line">    $replyEmail = <span class="string">''</span>;                   <span class="comment">//留空则为发件人EMAIL</span></span><br><span class="line">    $replyName = <span class="string">''</span>;                    <span class="comment">//回复名称（留空则为发件人名称）</span></span><br><span class="line">    $mail-&gt;AddReplyTo($replyEmail, $replyName);</span><br><span class="line">    $mail-&gt;Subject = $tomail_array[<span class="string">'subject'</span>];  <span class="comment">//标题</span></span><br><span class="line">    $mail-&gt;MsgHTML($tomail_array[<span class="string">'content'</span>]);  <span class="comment">//内容</span></span><br><span class="line">    $mail-&gt;AddAddress($tomail_array[<span class="string">'toemail'</span>], $tomail_array[<span class="string">'name'</span>]); <span class="comment">//目标邮件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_array($attachment)) &#123; <span class="comment">// 添加附件</span></span><br><span class="line">        <span class="keyword">foreach</span> ($attachment <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            is_file($file) &amp;&amp; $mail-&gt;AddAttachment($file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $mail-&gt;Send() ? <span class="keyword">true</span> : $mail-&gt;ErrorInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>然后在你需要的地方调用<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$item = [</span><br><span class="line">   <span class="string">'toemail'</span> =&gt; <span class="string">'xxxx@qq.com'</span>,   <span class="comment">//目标邮件地址</span></span><br><span class="line">   <span class="string">'name'</span> =&gt; <span class="string">''</span>, <span class="comment">//名称</span></span><br><span class="line">   <span class="string">'subject'</span> =&gt; <span class="string">''</span>, <span class="comment">//邮件标题</span></span><br><span class="line">   <span class="string">'content'</span> =&gt; <span class="string">''</span>  <span class="comment">//邮件内容，支持html</span></span><br><span class="line">];</span><br><span class="line">$res = send_mail($item)</span><br><span class="line">dd($res);</span><br></pre></td></tr></table></figure><p></p><p>除此之外，还可以群发，发附件等等，详情请到github中查看！</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Whoops替换thinkphp5的异常获取</title>
      <link href="/archives/3129d084/"/>
      <url>/archives/3129d084/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Whoops是一个很漂亮的异常捕获工具包，tp5自带的自己用不习惯，就换了这个东西，Github: <a href="https://github.com/filp/whoops" target="_blank" rel="noopener">https://github.com/filp/whoops</a>，先放个预览图：</p><p><img src="https://iuu.st/uploads/iuu/20180915/e0e1a5987ac436e0b06de307e2deb62a.png" alt="atm.png"></p><a id="more"></a><h2 id="安装方法："><a href="#安装方法：" class="headerlink" title="安装方法："></a>安装方法：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer <span class="keyword">require</span> filp/whoops</span><br></pre></td></tr></table></figure><h3 id="配置Thinkphp5"><a href="#配置Thinkphp5" class="headerlink" title="配置Thinkphp5"></a>配置Thinkphp5</h3><ol><li>在你的项目里新建一个文件，如：我新建文件 <code>application/common/exception/Http.php</code></li><li><p>在文件里写入下面代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">exception</span>;</span><br><span class="line">   <span class="keyword">use</span> <span class="title">Exception</span>;</span><br><span class="line">   <span class="keyword">use</span> <span class="title">think</span>\<span class="title">exception</span>\<span class="title">Handle</span>;</span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">Http</span> <span class="keyword">extends</span> <span class="title">Handle</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">(Exception $e)</span></span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (version_compare(PHP_VERSION, <span class="string">'5.5.9'</span>, <span class="string">'&lt;'</span>))&#123;  <span class="comment">//这里判断如果php版本比较低，就默认用系统的，当然你也可以安装版本较低的Whoops</span></span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">parent</span>::render($e);</span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               $whoops = <span class="keyword">new</span> \Whoops\Run;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (request()-&gt;isAjax())&#123; <span class="comment">//如果是ajax请求，就返回json数据</span></span><br><span class="line">                   $whoops-&gt;pushHandler(<span class="keyword">new</span> \Whoops\Handler\JsonResponseHandler);</span><br><span class="line">                   <span class="keyword">return</span>  $whoops-&gt;handleException($e);</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   <span class="comment">//否则返回html数据</span></span><br><span class="line">                   $whoops-&gt;pushHandler(<span class="keyword">new</span> \Whoops\Handler\PrettyPageHandler);</span><br><span class="line">                   <span class="keyword">return</span>  $whoops-&gt;handleException($e);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>打开配置文件<code>application/config.php</code>，找到<code>exception_handle</code>配置，修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\app\\common\\<span class="keyword">exception</span>\\Http</span><br></pre></td></tr></table></figure></li></ol><p>大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel包barryvdh laravel-cors解决js跨域问题</title>
      <link href="/archives/37025a3b/"/>
      <url>/archives/37025a3b/</url>
      
        <content type="html"><![CDATA[<blockquote><p>github地址：<a href="https://github.com/barryvdh/laravel-cors" target="_blank" rel="noopener">https://github.com/barryvdh/laravel-cors</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先引入包：<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer require barryvdh/laravel-cors</span><br></pre></td></tr></table></figure><p></p><h2 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --provider=<span class="string">"Barryvdh\Cors\ServiceProvider"</span></span><br></pre></td></tr></table></figure><p>代码如下<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> [</span><br><span class="line">     <span class="comment">/*</span></span><br><span class="line"><span class="comment">     |--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">     | Laravel CORS</span></span><br><span class="line"><span class="comment">     |--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     | allowedOrigins, allowedHeaders and allowedMethods can be set to array('*')</span></span><br><span class="line"><span class="comment">     | to accept any value.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="string">'supportsCredentials'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">    <span class="string">'allowedOrigins'</span> =&gt; [<span class="string">'*'</span>],</span><br><span class="line">    <span class="string">'allowedHeaders'</span> =&gt; [<span class="string">'*'</span>], <span class="comment">// ex : ['Content-Type', 'Accept']</span></span><br><span class="line">    <span class="string">'allowedMethods'</span> =&gt; [<span class="string">'*'</span>], <span class="comment">// ex: ['GET', 'POST', 'PUT',  'DELETE']</span></span><br><span class="line">    <span class="string">'exposedHeaders'</span> =&gt; [],</span><br><span class="line">    <span class="string">'maxAge'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">'hosts'</span> =&gt; [],</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p></p><p>在app.php中添加：<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Barryvdh\Cors\ServiceProvider::class,</span><br></pre></td></tr></table></figure><p></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在路由中使用<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::group([<span class="string">'middleware'</span> =&gt; <span class="string">'cors'</span>], <span class="function"><span class="keyword">function</span><span class="params">(Router $router)</span></span>&#123;</span><br><span class="line">    $router-&gt;get(<span class="string">'api'</span>, <span class="string">'ApiController@index'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p></p><p>在中间件中使用<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $middleware = [</span><br><span class="line">    ....</span><br><span class="line">    \Barryvdh\Cors\HandleCors::class</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p></p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
            <tag> php </tag>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx反向代理websocket</title>
      <link href="/archives/efc4f59c/"/>
      <url>/archives/efc4f59c/</url>
      
        <content type="html"><![CDATA[<p>使用国外服务器，发现国内访问十分卡，想到使用阿里云香港vps做跳板，没想到效果很好，原本400多的延迟下降到了200多，但是会出现一个问题，就是源站websocket会报错，其实处理方法很简单，代码如下！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># websocket配置</span><br><span class="line">upstream wsbackend &#123;</span><br><span class="line">  server 127.0.0.1:8888;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 8888; # 监听端口</span><br><span class="line">    server_name xxx.com;  # 实际访问域名</span><br><span class="line">    location / </span><br><span class="line">    &#123;</span><br><span class="line">        # http代理</span><br><span class="line">    proxy_pass      http://111.111.111.111;  # 你的目标域名或ip</span><br><span class="line">        proxy_set_header Host   $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">        # websocket配置</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL 5.7 修改密码错误、过期问题</title>
      <link href="/archives/b6e52540/"/>
      <url>/archives/b6e52540/</url>
      
        <content type="html"><![CDATA[<h2 id="报错："><a href="#报错：" class="headerlink" title="报错："></a>报错：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1862 (HY000): Your password has expired. To log in you must change it using a client that supports expired passwords.</span><br></pre></td></tr></table></figure><p>错误1862(HY000):你的密码已经过期。登录必须改变它使用一个客户端,支持过期的密码。</p><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><ul><li>首先关闭Mysql进程；</li><li><p>cmd进入mysql的bin目录下，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --skip-grant-tables</span><br></pre></td></tr></table></figure></li><li><p>再在bin目录下打开cmd，运行如下进入数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br></pre></td></tr></table></figure></li><li><p>选择数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; use mysql;</span><br></pre></td></tr></table></figure></li><li><p>查看数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from mysql.user where user=&apos;root&apos; \G</span><br></pre></td></tr></table></figure></li><li><p>将密码过期修改为 密码不过期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; UPDATE user SET `password_expired`=&apos;N&apos; where user=&apos;root&apos;;</span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; UPDATE user SET `authentication_string` = PASSWORD(&apos;root&apos;);</span><br></pre></td></tr></table></figure></li><li><p>退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; exit;</span><br></pre></td></tr></table></figure></li><li><p>重启数据库</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
